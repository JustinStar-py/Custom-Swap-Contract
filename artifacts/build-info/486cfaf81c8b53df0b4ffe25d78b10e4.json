{"id":"486cfaf81c8b53df0b4ffe25d78b10e4","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/dataFeeds.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract dataFeeds is ReentrancyGuard {\n   using SafeMath for uint256;\n\n   address public owner;   \n\n   constructor() {\n         owner = msg.sender;\n   }  \n   \n   // Mapping to store token addresses and their corresponding prices\n   mapping(address => uint256) public tokenPrices;   \n\n   modifier onlyOwner() {\n       require(msg.sender == owner, \"Only the contract owner can perform this action.\");\n       _;\n   } \n   \n   // Function to set prices for multiple tokens using a JSON object\n   function setMultipleTokenPrices (address[] memory tokenAddresses, uint256[] memory prices) external onlyOwner {\n     require(tokenAddresses.length == prices.length, \"Array lengths must match\");  \n     \n     for (uint256 i = 0; i < tokenAddresses.length; i++) {\n         tokenPrices[tokenAddresses[i]] = prices[i];\n     }\n   } \n   \n   function calcuMul(address tokenIn, address tokenOut, uint256 amountIn) public view returns (uint256 Mul) {\n      uint256 tokenInPrice = tokenPrices[tokenIn];\n      uint256 tokenOutPrice = tokenPrices[tokenOut];   \n\n      Mul = (tokenInPrice * amountIn / tokenOutPrice);\n   }\n\n   function getTokenPrice(address tokenAddress) public view returns (uint256) {\n     return tokenPrices[tokenAddress];\n   }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[64]},"id":65,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":64,"linearizedBaseContracts":[64],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":64,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":64,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":64,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":64,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":64,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":62,"nodeType":"Block","src":"3081:43:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"3098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":59,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3109:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":57,"id":61,"nodeType":"Return","src":"3091:26:0"}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2844:168:0","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"3049:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"3075:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:0"},"scope":64,"src":"3017:107:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":65,"src":"888:2238:0","usedErrors":[]}],"src":"112:3015:0"},"id":0},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[376]},"id":377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"285:196:1","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":376,"linearizedBaseContracts":[376],"name":"SafeMath","nameLocation":"490:8:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":98,"nodeType":"Block","src":"717:140:1","statements":[{"id":97,"nodeType":"UncheckedBlock","src":"727:124:1","statements":[{"assignments":[80],"declarations":[{"constant":false,"id":80,"mutability":"mutable","name":"c","nameLocation":"759:1:1","nodeType":"VariableDeclaration","scope":97,"src":"751:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":84,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":81,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"763:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":82,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"767:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":85,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"786:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":86,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"790:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":92,"nodeType":"IfStatement","src":"782:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":89,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":90,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":78,"id":91,"nodeType":"Return","src":"793:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":94,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"838:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":95,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":78,"id":96,"nodeType":"Return","src":"824:16:1"}]}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"505:131:1","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":99,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:1","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"a","nameLocation":"665:1:1","nodeType":"VariableDeclaration","scope":99,"src":"657:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"b","nameLocation":"676:1:1","nodeType":"VariableDeclaration","scope":99,"src":"668:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:1"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":99,"src":"702:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":74,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":99,"src":"708:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:1"},"scope":376,"src":"641:216:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":126,"nodeType":"Block","src":"1078:113:1","statements":[{"id":125,"nodeType":"UncheckedBlock","src":"1088:97:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1116:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"1120:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":118,"nodeType":"IfStatement","src":"1112:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":110,"id":117,"nodeType":"Return","src":"1123:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"1168:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":110,"id":124,"nodeType":"Return","src":"1154:20:1"}]}]},"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"863:134:1","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":127,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:1","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"a","nameLocation":"1026:1:1","nodeType":"VariableDeclaration","scope":127,"src":"1018:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"b","nameLocation":"1037:1:1","nodeType":"VariableDeclaration","scope":127,"src":"1029:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:1"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":127,"src":"1063:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":127,"src":"1069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:1"},"scope":376,"src":"1002:189:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":168,"nodeType":"Block","src":"1415:417:1","statements":[{"id":167,"nodeType":"UncheckedBlock","src":"1425:401:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":139,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1683:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"IfStatement","src":"1679:28:1","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":138,"id":145,"nodeType":"Return","src":"1691:16:1"}},{"assignments":[148],"declarations":[{"constant":false,"id":148,"mutability":"mutable","name":"c","nameLocation":"1729:1:1","nodeType":"VariableDeclaration","scope":167,"src":"1721:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":152,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1733:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1737:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":153,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1756:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1760:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1765:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":162,"nodeType":"IfStatement","src":"1752:33:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":138,"id":161,"nodeType":"Return","src":"1768:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":164,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1813:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":138,"id":166,"nodeType":"Return","src":"1799:16:1"}]}]},"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"1197:137:1","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":169,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:1","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"a","nameLocation":"1363:1:1","nodeType":"VariableDeclaration","scope":169,"src":"1355:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"b","nameLocation":"1374:1:1","nodeType":"VariableDeclaration","scope":169,"src":"1366:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"1400:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":134,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"1406:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:1"},"scope":376,"src":"1339:493:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":196,"nodeType":"Block","src":"2057:114:1","statements":[{"id":195,"nodeType":"UncheckedBlock","src":"2067:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2095:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"IfStatement","src":"2091:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":180,"id":187,"nodeType":"Return","src":"2103:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2148:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2152:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":180,"id":194,"nodeType":"Return","src":"2134:20:1"}]}]},"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1838:138:1","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":197,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:1","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"a","nameLocation":"2005:1:1","nodeType":"VariableDeclaration","scope":197,"src":"1997:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"b","nameLocation":"2016:1:1","nodeType":"VariableDeclaration","scope":197,"src":"2008:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2042:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2048:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:1"},"scope":376,"src":"1981:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":224,"nodeType":"Block","src":"2406:114:1","statements":[{"id":223,"nodeType":"UncheckedBlock","src":"2416:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"2444:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":216,"nodeType":"IfStatement","src":"2440:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":208,"id":215,"nodeType":"Return","src":"2452:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":218,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"2497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"2501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":208,"id":222,"nodeType":"Return","src":"2483:20:1"}]}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2177:148:1","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":225,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:1","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"a","nameLocation":"2354:1:1","nodeType":"VariableDeclaration","scope":225,"src":"2346:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"b","nameLocation":"2365:1:1","nodeType":"VariableDeclaration","scope":225,"src":"2357:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"2391:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"2397:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:1"},"scope":376,"src":"2330:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":239,"nodeType":"Block","src":"2822:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2839:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":236,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2843:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":234,"id":238,"nodeType":"Return","src":"2832:12:1"}]},"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2526:224:1","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":240,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:1","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"a","nameLocation":"2776:1:1","nodeType":"VariableDeclaration","scope":240,"src":"2768:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"b","nameLocation":"2787:1:1","nodeType":"VariableDeclaration","scope":240,"src":"2779:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:1"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"2813:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:1"},"scope":376,"src":"2755:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"3189:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3206:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3210:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":249,"id":253,"nodeType":"Return","src":"3199:12:1"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"2857:260:1","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"a","nameLocation":"3143:1:1","nodeType":"VariableDeclaration","scope":255,"src":"3135:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"b","nameLocation":"3154:1:1","nodeType":"VariableDeclaration","scope":255,"src":"3146:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"3180:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:1"},"scope":376,"src":"3122:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":269,"nodeType":"Block","src":"3532:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3549:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3553:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":264,"id":268,"nodeType":"Return","src":"3542:12:1"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"3224:236:1","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":270,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:1","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"a","nameLocation":"3486:1:1","nodeType":"VariableDeclaration","scope":270,"src":"3478:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"b","nameLocation":"3497:1:1","nodeType":"VariableDeclaration","scope":270,"src":"3489:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":270,"src":"3523:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:1"},"scope":376,"src":"3465:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"3917:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3934:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":281,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3938:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":279,"id":283,"nodeType":"Return","src":"3927:12:1"}]},"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"3567:278:1","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":285,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:1","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"a","nameLocation":"3871:1:1","nodeType":"VariableDeclaration","scope":285,"src":"3863:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"b","nameLocation":"3882:1:1","nodeType":"VariableDeclaration","scope":285,"src":"3874:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:1"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"3908:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:1"},"scope":376,"src":"3850:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":299,"nodeType":"Block","src":"4466:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4483:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"4487:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":294,"id":298,"nodeType":"Return","src":"4476:12:1"}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"3952:442:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":300,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:1","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"a","nameLocation":"4420:1:1","nodeType":"VariableDeclaration","scope":300,"src":"4412:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"b","nameLocation":"4431:1:1","nodeType":"VariableDeclaration","scope":300,"src":"4423:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:1"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"4457:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:1"},"scope":376,"src":"4399:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"5054:106:1","statements":[{"id":323,"nodeType":"UncheckedBlock","src":"5064:90:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":313,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5096:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5101:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":316,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5104:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":318,"nodeType":"ExpressionStatement","src":"5088:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5138:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":320,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5142:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":311,"id":322,"nodeType":"Return","src":"5131:12:1"}]}]},"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"4501:453:1","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:1","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"a","nameLocation":"4980:1:1","nodeType":"VariableDeclaration","scope":325,"src":"4972:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"b","nameLocation":"4991:1:1","nodeType":"VariableDeclaration","scope":325,"src":"4983:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:1","nodeType":"VariableDeclaration","scope":325,"src":"4994:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":306,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:1"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"5045:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:1"},"scope":376,"src":"4959:201:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":349,"nodeType":"Block","src":"5739:105:1","statements":[{"id":348,"nodeType":"UncheckedBlock","src":"5749:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5781:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":341,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5788:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5773:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"5773:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5822:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5826:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":336,"id":347,"nodeType":"Return","src":"5815:12:1"}]}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"5166:473:1","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":350,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:1","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"a","nameLocation":"5665:1:1","nodeType":"VariableDeclaration","scope":350,"src":"5657:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"b","nameLocation":"5676:1:1","nodeType":"VariableDeclaration","scope":350,"src":"5668:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:1","nodeType":"VariableDeclaration","scope":350,"src":"5679:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":331,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:1"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":350,"src":"5730:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:1"},"scope":376,"src":"5644:200:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":374,"nodeType":"Block","src":"6585:105:1","statements":[{"id":373,"nodeType":"UncheckedBlock","src":"6595:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"6627:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":366,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6634:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"6619:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"6668:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"6672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":361,"id":372,"nodeType":"Return","src":"6661:12:1"}]}]},"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"5850:635:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:1","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"a","nameLocation":"6511:1:1","nodeType":"VariableDeclaration","scope":375,"src":"6503:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"b","nameLocation":"6522:1:1","nodeType":"VariableDeclaration","scope":375,"src":"6514:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:1","nodeType":"VariableDeclaration","scope":375,"src":"6525:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":356,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"6576:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:1"},"scope":376,"src":"6490:200:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":377,"src":"482:6210:1","usedErrors":[]}],"src":"107:6586:1"},"id":1},"contracts/dataFeeds.sol":{"ast":{"absolutePath":"contracts/dataFeeds.sol","exportedSymbols":{"ReentrancyGuard":[64],"SafeMath":[376],"dataFeeds":[502]},"id":503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":378,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":503,"sourceUnit":377,"src":"138:57:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":503,"sourceUnit":65,"src":"196:62:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":381,"name":"ReentrancyGuard","nameLocations":["282:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"282:15:2"},"id":382,"nodeType":"InheritanceSpecifier","src":"282:15:2"}],"canonicalName":"dataFeeds","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":502,"linearizedBaseContracts":[502,64],"name":"dataFeeds","nameLocation":"269:9:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":385,"libraryName":{"id":383,"name":"SafeMath","nameLocations":["309:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"309:8:2"},"nodeType":"UsingForDirective","src":"303:27:2","typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"8da5cb5b","id":387,"mutability":"mutable","name":"owner","nameLocation":"350:5:2","nodeType":"VariableDeclaration","scope":502,"src":"335:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":395,"nodeType":"Block","src":"378:35:2","statements":[{"expression":{"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"389:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":391,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"397:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"401:6:2","memberName":"sender","nodeType":"MemberAccess","src":"397:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"389:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":394,"nodeType":"ExpressionStatement","src":"389:18:2"}]},"id":396,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"375:2:2"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"378:0:2"},"scope":502,"src":"364:49:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"204120bc","id":400,"mutability":"mutable","name":"tokenPrices","nameLocation":"528:11:2","nodeType":"VariableDeclaration","scope":502,"src":"493:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":399,"keyType":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"493:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":411,"nodeType":"Block","src":"569:105:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"586:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"590:6:2","memberName":"sender","nodeType":"MemberAccess","src":"586:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":405,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"600:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"586:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792074686520636f6e7472616374206f776e65722063616e20706572666f726d207468697320616374696f6e2e","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"607:50:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_37a1d48c8d794a51537bb1948f4c7674861aebd6ada3d5303da30ab6453a1320","typeString":"literal_string \"Only the contract owner can perform this action.\""},"value":"Only the contract owner can perform this action."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37a1d48c8d794a51537bb1948f4c7674861aebd6ada3d5303da30ab6453a1320","typeString":"literal_string \"Only the contract owner can perform this action.\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"578:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"578:80:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"578:80:2"},{"id":410,"nodeType":"PlaceholderStatement","src":"667:1:2"}]},"id":412,"name":"onlyOwner","nameLocation":"557:9:2","nodeType":"ModifierDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"566:2:2"},"src":"548:126:2","virtual":false,"visibility":"internal"},{"body":{"id":455,"nodeType":"Block","src":"862:215:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":424,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"877:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"892:6:2","memberName":"length","nodeType":"MemberAccess","src":"877:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":426,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"902:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"909:6:2","memberName":"length","nodeType":"MemberAccess","src":"902:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"877:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172726179206c656e67746873206d757374206d61746368","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"917:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e","typeString":"literal_string \"Array lengths must match\""},"value":"Array lengths must match"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e","typeString":"literal_string \"Array lengths must match\""}],"id":423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"869:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"869:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"869:75:2"},{"body":{"id":453,"nodeType":"Block","src":"1011:61:2","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"tokenPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1022:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":447,"indexExpression":{"baseExpression":{"id":444,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"1034:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":446,"indexExpression":{"id":445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"1049:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1034:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1022:30:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":448,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1055:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":450,"indexExpression":{"id":449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"1062:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1055:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:42:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":452,"nodeType":"ExpressionStatement","src":"1022:42:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"979:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":437,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"983:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"998:6:2","memberName":"length","nodeType":"MemberAccess","src":"983:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"979:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"initializationExpression":{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"i","nameLocation":"972:1:2","nodeType":"VariableDeclaration","scope":454,"src":"964:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"976:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"964:13:2"},"loopExpression":{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1006:3:2","subExpression":{"id":440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"1006:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":442,"nodeType":"ExpressionStatement","src":"1006:3:2"},"nodeType":"ForStatement","src":"959:113:2"}]},"functionSelector":"fe0992d0","id":456,"implemented":true,"kind":"function","modifiers":[{"id":421,"kind":"modifierInvocation","modifierName":{"id":420,"name":"onlyOwner","nameLocations":["852:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":412,"src":"852:9:2"},"nodeType":"ModifierInvocation","src":"852:9:2"}],"name":"setMultipleTokenPrices","nameLocation":"761:22:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"tokenAddresses","nameLocation":"802:14:2","nodeType":"VariableDeclaration","scope":456,"src":"785:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"785:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":414,"nodeType":"ArrayTypeName","src":"785:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"prices","nameLocation":"835:6:2","nodeType":"VariableDeclaration","scope":456,"src":"818:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":417,"nodeType":"ArrayTypeName","src":"818:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"784:58:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"862:0:2"},"scope":502,"src":"752:325:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":488,"nodeType":"Block","src":"1191:169:2","statements":[{"assignments":[468],"declarations":[{"constant":false,"id":468,"mutability":"mutable","name":"tokenInPrice","nameLocation":"1207:12:2","nodeType":"VariableDeclaration","scope":488,"src":"1199:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":472,"initialValue":{"baseExpression":{"id":469,"name":"tokenPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1222:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":471,"indexExpression":{"id":470,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1222:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1199:43:2"},{"assignments":[474],"declarations":[{"constant":false,"id":474,"mutability":"mutable","name":"tokenOutPrice","nameLocation":"1258:13:2","nodeType":"VariableDeclaration","scope":488,"src":"1250:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":478,"initialValue":{"baseExpression":{"id":475,"name":"tokenPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1274:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":477,"indexExpression":{"id":476,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"1286:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1274:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1250:45:2"},{"expression":{"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":479,"name":"Mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"1307:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"tokenInPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"1314:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":481,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1329:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1314:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":483,"name":"tokenOutPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1340:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1314:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1313:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1307:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":487,"nodeType":"ExpressionStatement","src":"1307:47:2"}]},"functionSelector":"b3712d56","id":489,"implemented":true,"kind":"function","modifiers":[],"name":"calcuMul","nameLocation":"1095:8:2","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"tokenIn","nameLocation":"1112:7:2","nodeType":"VariableDeclaration","scope":489,"src":"1104:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"tokenOut","nameLocation":"1129:8:2","nodeType":"VariableDeclaration","scope":489,"src":"1121:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"amountIn","nameLocation":"1147:8:2","nodeType":"VariableDeclaration","scope":489,"src":"1139:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"1139:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:53:2"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"Mul","nameLocation":"1186:3:2","nodeType":"VariableDeclaration","scope":489,"src":"1178:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1177:13:2"},"scope":502,"src":"1086:274:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":500,"nodeType":"Block","src":"1440:45:2","statements":[{"expression":{"baseExpression":{"id":496,"name":"tokenPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1454:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":498,"indexExpression":{"id":497,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1466:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1454:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":495,"id":499,"nodeType":"Return","src":"1447:32:2"}]},"functionSelector":"d02641a0","id":501,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenPrice","nameLocation":"1374:13:2","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"tokenAddress","nameLocation":"1396:12:2","nodeType":"VariableDeclaration","scope":501,"src":"1388:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1387:22:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":501,"src":"1431:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1430:9:2"},"scope":502,"src":"1365:120:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":503,"src":"260:1227:2","usedErrors":[]}],"src":"32:1455:2"},"id":2}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e77a4680532ae9e9e61e1cd4ff6be2a8d9dddec98c69552d2944258cddde66d64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH24 0xA4680532AE9E9E61E1CD4FF6BE2A8D9DDDEC98C69552D294 TIMESTAMP PC 0xCD 0xDD 0xE6 PUSH14 0x64736F6C63430008110033000000 ","sourceMap":"482:6210:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e77a4680532ae9e9e61e1cd4ff6be2a8d9dddec98c69552d2944258cddde66d64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH24 0xA4680532AE9E9E61E1CD4FF6BE2A8D9DDDEC98C69552D294 TIMESTAMP PC 0xCD 0xDD 0xE6 PUSH14 0x64736F6C63430008110033000000 ","sourceMap":"482:6210:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"contracts/dataFeeds.sol":{"dataFeeds":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"calcuMul","outputs":[{"internalType":"uint256","name":"Mul","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"getTokenPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokenAddresses","type":"address[]"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"}],"name":"setMultipleTokenPrices","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0},"@_396":{"entryPoint":null,"id":396,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506001600081905580546001600160a01b03191633179055610563806100376000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063204120bc1461005c5780638da5cb5b1461008f578063b3712d56146100ba578063d02641a0146100cd578063fe0992d0146100f6575b600080fd5b61007c61006a3660046102b5565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6001546100a2906001600160a01b031681565b6040516001600160a01b039091168152602001610086565b61007c6100c83660046102d7565b61010b565b61007c6100db3660046102b5565b6001600160a01b031660009081526002602052604090205490565b6101096101043660046103e9565b610150565b005b6001600160a01b038084166000908152600260205260408082205492851682528120549091908061013c85846104bf565b61014691906104dc565b9695505050505050565b6001546001600160a01b031633146101c85760405162461bcd60e51b815260206004820152603060248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e207065726660448201526f37b936903a3434b99030b1ba34b7b71760811b60648201526084015b60405180910390fd5b80518251146102195760405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d61746368000000000000000060448201526064016101bf565b60005b825181101561029457818181518110610237576102376104fe565b602002602001015160026000858481518110610255576102556104fe565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550808061028c90610514565b91505061021c565b505050565b80356001600160a01b03811681146102b057600080fd5b919050565b6000602082840312156102c757600080fd5b6102d082610299565b9392505050565b6000806000606084860312156102ec57600080fd5b6102f584610299565b925061030360208501610299565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561035257610352610313565b604052919050565b600067ffffffffffffffff82111561037457610374610313565b5060051b60200190565b600082601f83011261038f57600080fd5b813560206103a461039f8361035a565b610329565b82815260059290921b840181019181810190868411156103c357600080fd5b8286015b848110156103de57803583529183019183016103c7565b509695505050505050565b600080604083850312156103fc57600080fd5b823567ffffffffffffffff8082111561041457600080fd5b818501915085601f83011261042857600080fd5b8135602061043861039f8361035a565b82815260059290921b8401810191818101908984111561045757600080fd5b948201945b8386101561047c5761046d86610299565b8252948201949082019061045c565b9650508601359250508082111561049257600080fd5b5061049f8582860161037e565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104d6576104d66104a9565b92915050565b6000826104f957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610526576105266104a9565b506001019056fea26469706673582212208a6e7857259d0c76a2a9122964d88e8d301aee821d7e424e627735d16d24fdc664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x563 DUP1 PUSH2 0x37 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x204120BC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xB3712D56 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xFE0992D0 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST PUSH2 0x7C PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST PUSH2 0x7C PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 PUSH2 0x13C DUP6 DUP5 PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x4DC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E65722063616E2070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x37B936903A3434B99030B1BA34B7B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E67746873206D757374206D617463680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x294 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x237 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x255 JUMPI PUSH2 0x255 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x28C SWAP1 PUSH2 0x514 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D0 DUP3 PUSH2 0x299 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F5 DUP5 PUSH2 0x299 JUMP JUMPDEST SWAP3 POP PUSH2 0x303 PUSH1 0x20 DUP6 ADD PUSH2 0x299 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x352 JUMPI PUSH2 0x352 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x374 JUMPI PUSH2 0x374 PUSH2 0x313 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3A4 PUSH2 0x39F DUP4 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DE JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3C7 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x438 PUSH2 0x39F DUP4 PUSH2 0x35A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x47C JUMPI PUSH2 0x46D DUP7 PUSH2 0x299 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x45C JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F DUP6 DUP3 DUP7 ADD PUSH2 0x37E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x4A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x526 JUMPI PUSH2 0x526 PUSH2 0x4A9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH15 0x7857259D0C76A2A9122964D88E8D30 BYTE 0xEE DUP3 SAR PUSH31 0x424E627735D16D24FDC664736F6C6343000811003300000000000000000000 ","sourceMap":"260:1227:2:-:0;;;364:49;;;;;;;;;-1:-1:-1;1716:1:0;1821:7;:22;;;389:18:2;;-1:-1:-1;;;;;;389:18:2;397:10;389:18;;;260:1227;;;;;;"},"deployedBytecode":{"functionDebugData":{"@calcuMul_489":{"entryPoint":267,"id":489,"parameterSlots":3,"returnSlots":1},"@getTokenPrice_501":{"entryPoint":null,"id":501,"parameterSlots":1,"returnSlots":1},"@owner_387":{"entryPoint":null,"id":387,"parameterSlots":0,"returnSlots":0},"@setMultipleTokenPrices_456":{"entryPoint":336,"id":456,"parameterSlots":2,"returnSlots":0},"@tokenPrices_400":{"entryPoint":null,"id":400,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":665,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":727,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1001,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37a1d48c8d794a51537bb1948f4c7674861aebd6ada3d5303da30ab6453a1320__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":809,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":1244,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1215,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":1300,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1193,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1278,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":787,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5090:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:3","statements":[{"nodeType":"YulAssignment","src":"73:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:3"},"nodeType":"YulFunctionCall","src":"82:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:3"}]},{"body":{"nodeType":"YulBlock","src":"165:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:3"},"nodeType":"YulFunctionCall","src":"167:12:3"},"nodeType":"YulExpressionStatement","src":"167:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:3"},"nodeType":"YulFunctionCall","src":"146:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:3"},"nodeType":"YulFunctionCall","src":"142:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:3"},"nodeType":"YulFunctionCall","src":"131:31:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:3"},"nodeType":"YulFunctionCall","src":"121:42:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:3"},"nodeType":"YulFunctionCall","src":"114:50:3"},"nodeType":"YulIf","src":"111:70:3"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:3","type":""}],"src":"14:173:3"},{"body":{"nodeType":"YulBlock","src":"262:116:3","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:3"},"nodeType":"YulFunctionCall","src":"279:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:3"},"nodeType":"YulFunctionCall","src":"275:32:3"},"nodeType":"YulIf","src":"272:52:3"},{"nodeType":"YulAssignment","src":"333:39:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:3"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:3"},"nodeType":"YulFunctionCall","src":"343:29:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:3"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:3","type":""}],"src":"192:186:3"},{"body":{"nodeType":"YulBlock","src":"484:76:3","statements":[{"nodeType":"YulAssignment","src":"494:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:3"},"nodeType":"YulFunctionCall","src":"502:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"536:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"547:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"529:6:3"},"nodeType":"YulFunctionCall","src":"529:25:3"},"nodeType":"YulExpressionStatement","src":"529:25:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"453:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"464:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"475:4:3","type":""}],"src":"383:177:3"},{"body":{"nodeType":"YulBlock","src":"666:102:3","statements":[{"nodeType":"YulAssignment","src":"676:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"688:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"699:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"684:3:3"},"nodeType":"YulFunctionCall","src":"684:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"676:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"733:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"745:3:3"},"nodeType":"YulFunctionCall","src":"745:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"758:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"741:3:3"},"nodeType":"YulFunctionCall","src":"741:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"729:3:3"},"nodeType":"YulFunctionCall","src":"729:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"711:6:3"},"nodeType":"YulFunctionCall","src":"711:51:3"},"nodeType":"YulExpressionStatement","src":"711:51:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"635:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"646:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"657:4:3","type":""}],"src":"565:203:3"},{"body":{"nodeType":"YulBlock","src":"877:224:3","statements":[{"body":{"nodeType":"YulBlock","src":"923:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"932:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"935:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"925:6:3"},"nodeType":"YulFunctionCall","src":"925:12:3"},"nodeType":"YulExpressionStatement","src":"925:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"898:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"907:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"894:3:3"},"nodeType":"YulFunctionCall","src":"894:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"919:2:3","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"890:3:3"},"nodeType":"YulFunctionCall","src":"890:32:3"},"nodeType":"YulIf","src":"887:52:3"},{"nodeType":"YulAssignment","src":"948:39:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"977:9:3"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"958:18:3"},"nodeType":"YulFunctionCall","src":"958:29:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"948:6:3"}]},{"nodeType":"YulAssignment","src":"996:48:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1029:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1040:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:3"},"nodeType":"YulFunctionCall","src":"1025:18:3"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1006:18:3"},"nodeType":"YulFunctionCall","src":"1006:38:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"996:6:3"}]},{"nodeType":"YulAssignment","src":"1053:42:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1080:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1076:3:3"},"nodeType":"YulFunctionCall","src":"1076:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1063:12:3"},"nodeType":"YulFunctionCall","src":"1063:32:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1053:6:3"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"827:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"838:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"850:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"858:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"866:6:3","type":""}],"src":"773:328:3"},{"body":{"nodeType":"YulBlock","src":"1138:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1155:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1162:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1167:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1158:3:3"},"nodeType":"YulFunctionCall","src":"1158:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1148:6:3"},"nodeType":"YulFunctionCall","src":"1148:31:3"},"nodeType":"YulExpressionStatement","src":"1148:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1195:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1198:4:3","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1188:6:3"},"nodeType":"YulFunctionCall","src":"1188:15:3"},"nodeType":"YulExpressionStatement","src":"1188:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1219:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1222:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1212:6:3"},"nodeType":"YulFunctionCall","src":"1212:15:3"},"nodeType":"YulExpressionStatement","src":"1212:15:3"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1106:127:3"},{"body":{"nodeType":"YulBlock","src":"1283:230:3","statements":[{"nodeType":"YulAssignment","src":"1293:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1309:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1303:5:3"},"nodeType":"YulFunctionCall","src":"1303:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1293:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"1321:58:3","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1343:6:3"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1359:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"1365:2:3","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1355:3:3"},"nodeType":"YulFunctionCall","src":"1355:13:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1374:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1370:3:3"},"nodeType":"YulFunctionCall","src":"1370:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1351:3:3"},"nodeType":"YulFunctionCall","src":"1351:27:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:3"},"nodeType":"YulFunctionCall","src":"1339:40:3"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1325:10:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1454:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1456:16:3"},"nodeType":"YulFunctionCall","src":"1456:18:3"},"nodeType":"YulExpressionStatement","src":"1456:18:3"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1397:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"1409:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1394:2:3"},"nodeType":"YulFunctionCall","src":"1394:34:3"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1433:10:3"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1445:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1430:2:3"},"nodeType":"YulFunctionCall","src":"1430:22:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1391:2:3"},"nodeType":"YulFunctionCall","src":"1391:62:3"},"nodeType":"YulIf","src":"1388:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1492:2:3","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1496:10:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1485:6:3"},"nodeType":"YulFunctionCall","src":"1485:22:3"},"nodeType":"YulExpressionStatement","src":"1485:22:3"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1263:4:3","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1272:6:3","type":""}],"src":"1238:275:3"},{"body":{"nodeType":"YulBlock","src":"1587:114:3","statements":[{"body":{"nodeType":"YulBlock","src":"1631:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1633:16:3"},"nodeType":"YulFunctionCall","src":"1633:18:3"},"nodeType":"YulExpressionStatement","src":"1633:18:3"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1603:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"1611:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1600:2:3"},"nodeType":"YulFunctionCall","src":"1600:30:3"},"nodeType":"YulIf","src":"1597:56:3"},{"nodeType":"YulAssignment","src":"1662:33:3","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1678:1:3","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"1681:6:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1674:3:3"},"nodeType":"YulFunctionCall","src":"1674:14:3"},{"kind":"number","nodeType":"YulLiteral","src":"1690:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1670:3:3"},"nodeType":"YulFunctionCall","src":"1670:25:3"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1662:4:3"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1567:6:3","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1578:4:3","type":""}],"src":"1518:183:3"},{"body":{"nodeType":"YulBlock","src":"1770:598:3","statements":[{"body":{"nodeType":"YulBlock","src":"1819:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1828:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1831:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1821:6:3"},"nodeType":"YulFunctionCall","src":"1821:12:3"},"nodeType":"YulExpressionStatement","src":"1821:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1798:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"1806:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1794:3:3"},"nodeType":"YulFunctionCall","src":"1794:17:3"},{"name":"end","nodeType":"YulIdentifier","src":"1813:3:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1790:3:3"},"nodeType":"YulFunctionCall","src":"1790:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1783:6:3"},"nodeType":"YulFunctionCall","src":"1783:35:3"},"nodeType":"YulIf","src":"1780:55:3"},{"nodeType":"YulVariableDeclaration","src":"1844:30:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1867:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1854:12:3"},"nodeType":"YulFunctionCall","src":"1854:20:3"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1848:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1883:14:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1893:4:3","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1887:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1906:71:3","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1973:2:3"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"1933:39:3"},"nodeType":"YulFunctionCall","src":"1933:43:3"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1917:15:3"},"nodeType":"YulFunctionCall","src":"1917:60:3"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1910:3:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1986:16:3","value":{"name":"dst","nodeType":"YulIdentifier","src":"1999:3:3"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"1990:5:3","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2018:3:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2023:2:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:3"},"nodeType":"YulFunctionCall","src":"2011:15:3"},"nodeType":"YulExpressionStatement","src":"2011:15:3"},{"nodeType":"YulAssignment","src":"2035:19:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2046:3:3"},{"name":"_2","nodeType":"YulIdentifier","src":"2051:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2042:3:3"},"nodeType":"YulFunctionCall","src":"2042:12:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2035:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"2063:46:3","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2085:6:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:3","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"2100:2:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2093:3:3"},"nodeType":"YulFunctionCall","src":"2093:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2081:3:3"},"nodeType":"YulFunctionCall","src":"2081:23:3"},{"name":"_2","nodeType":"YulIdentifier","src":"2106:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2077:3:3"},"nodeType":"YulFunctionCall","src":"2077:32:3"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2067:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2137:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2146:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2149:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2139:6:3"},"nodeType":"YulFunctionCall","src":"2139:12:3"},"nodeType":"YulExpressionStatement","src":"2139:12:3"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2124:6:3"},{"name":"end","nodeType":"YulIdentifier","src":"2132:3:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2121:2:3"},"nodeType":"YulFunctionCall","src":"2121:15:3"},"nodeType":"YulIf","src":"2118:35:3"},{"nodeType":"YulVariableDeclaration","src":"2162:26:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2177:6:3"},{"name":"_2","nodeType":"YulIdentifier","src":"2185:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2173:3:3"},"nodeType":"YulFunctionCall","src":"2173:15:3"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2166:3:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2253:86:3","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2274:3:3"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2292:3:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2279:12:3"},"nodeType":"YulFunctionCall","src":"2279:17:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2267:6:3"},"nodeType":"YulFunctionCall","src":"2267:30:3"},"nodeType":"YulExpressionStatement","src":"2267:30:3"},{"nodeType":"YulAssignment","src":"2310:19:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2321:3:3"},{"name":"_2","nodeType":"YulIdentifier","src":"2326:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2317:3:3"},"nodeType":"YulFunctionCall","src":"2317:12:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2310:3:3"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2208:3:3"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2213:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2205:2:3"},"nodeType":"YulFunctionCall","src":"2205:15:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2221:23:3","statements":[{"nodeType":"YulAssignment","src":"2223:19:3","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2234:3:3"},{"name":"_2","nodeType":"YulIdentifier","src":"2239:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2230:3:3"},"nodeType":"YulFunctionCall","src":"2230:12:3"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2223:3:3"}]}]},"pre":{"nodeType":"YulBlock","src":"2201:3:3","statements":[]},"src":"2197:142:3"},{"nodeType":"YulAssignment","src":"2348:14:3","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"2357:5:3"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2348:5:3"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1744:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1752:3:3","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1760:5:3","type":""}],"src":"1706:662:3"},{"body":{"nodeType":"YulBlock","src":"2510:1009:3","statements":[{"body":{"nodeType":"YulBlock","src":"2556:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2568:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2558:6:3"},"nodeType":"YulFunctionCall","src":"2558:12:3"},"nodeType":"YulExpressionStatement","src":"2558:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2531:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2540:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2527:3:3"},"nodeType":"YulFunctionCall","src":"2527:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2552:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2523:3:3"},"nodeType":"YulFunctionCall","src":"2523:32:3"},"nodeType":"YulIf","src":"2520:52:3"},{"nodeType":"YulVariableDeclaration","src":"2581:37:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2608:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2595:12:3"},"nodeType":"YulFunctionCall","src":"2595:23:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2585:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2627:28:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2637:18:3","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2631:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2682:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2691:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2694:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2684:6:3"},"nodeType":"YulFunctionCall","src":"2684:12:3"},"nodeType":"YulExpressionStatement","src":"2684:12:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2670:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2678:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2667:2:3"},"nodeType":"YulFunctionCall","src":"2667:14:3"},"nodeType":"YulIf","src":"2664:34:3"},{"nodeType":"YulVariableDeclaration","src":"2707:32:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2721:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2732:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2717:3:3"},"nodeType":"YulFunctionCall","src":"2717:22:3"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2711:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2787:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2796:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2799:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2789:6:3"},"nodeType":"YulFunctionCall","src":"2789:12:3"},"nodeType":"YulExpressionStatement","src":"2789:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2766:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"2770:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2762:3:3"},"nodeType":"YulFunctionCall","src":"2762:13:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2777:7:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2758:3:3"},"nodeType":"YulFunctionCall","src":"2758:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2751:6:3"},"nodeType":"YulFunctionCall","src":"2751:35:3"},"nodeType":"YulIf","src":"2748:55:3"},{"nodeType":"YulVariableDeclaration","src":"2812:26:3","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2835:2:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2822:12:3"},"nodeType":"YulFunctionCall","src":"2822:16:3"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2816:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2847:14:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2857:4:3","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2851:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2870:71:3","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2937:2:3"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"2897:39:3"},"nodeType":"YulFunctionCall","src":"2897:43:3"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2881:15:3"},"nodeType":"YulFunctionCall","src":"2881:60:3"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2874:3:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2950:16:3","value":{"name":"dst","nodeType":"YulIdentifier","src":"2963:3:3"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"2954:5:3","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2982:3:3"},{"name":"_3","nodeType":"YulIdentifier","src":"2987:2:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2975:6:3"},"nodeType":"YulFunctionCall","src":"2975:15:3"},"nodeType":"YulExpressionStatement","src":"2975:15:3"},{"nodeType":"YulAssignment","src":"2999:19:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3010:3:3"},{"name":"_4","nodeType":"YulIdentifier","src":"3015:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:3"},"nodeType":"YulFunctionCall","src":"3006:12:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2999:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"3027:42:3","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3049:2:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3057:1:3","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"3060:2:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3053:3:3"},"nodeType":"YulFunctionCall","src":"3053:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3045:3:3"},"nodeType":"YulFunctionCall","src":"3045:19:3"},{"name":"_4","nodeType":"YulIdentifier","src":"3066:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:3"},"nodeType":"YulFunctionCall","src":"3041:28:3"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3031:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3101:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3110:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3113:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3103:6:3"},"nodeType":"YulFunctionCall","src":"3103:12:3"},"nodeType":"YulExpressionStatement","src":"3103:12:3"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3084:6:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3092:7:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3081:2:3"},"nodeType":"YulFunctionCall","src":"3081:19:3"},"nodeType":"YulIf","src":"3078:39:3"},{"nodeType":"YulVariableDeclaration","src":"3126:22:3","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3141:2:3"},{"name":"_4","nodeType":"YulIdentifier","src":"3145:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3137:3:3"},"nodeType":"YulFunctionCall","src":"3137:11:3"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3130:3:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3213:92:3","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3234:3:3"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3258:3:3"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3239:18:3"},"nodeType":"YulFunctionCall","src":"3239:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3227:6:3"},"nodeType":"YulFunctionCall","src":"3227:36:3"},"nodeType":"YulExpressionStatement","src":"3227:36:3"},{"nodeType":"YulAssignment","src":"3276:19:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3287:3:3"},{"name":"_4","nodeType":"YulIdentifier","src":"3292:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:3"},"nodeType":"YulFunctionCall","src":"3283:12:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3276:3:3"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3168:3:3"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3173:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3165:2:3"},"nodeType":"YulFunctionCall","src":"3165:15:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3181:23:3","statements":[{"nodeType":"YulAssignment","src":"3183:19:3","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3194:3:3"},{"name":"_4","nodeType":"YulIdentifier","src":"3199:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3190:3:3"},"nodeType":"YulFunctionCall","src":"3190:12:3"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3183:3:3"}]}]},"pre":{"nodeType":"YulBlock","src":"3161:3:3","statements":[]},"src":"3157:148:3"},{"nodeType":"YulAssignment","src":"3314:15:3","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3324:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3314:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"3338:48:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3371:9:3"},{"name":"_4","nodeType":"YulIdentifier","src":"3382:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3367:3:3"},"nodeType":"YulFunctionCall","src":"3367:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3354:12:3"},"nodeType":"YulFunctionCall","src":"3354:32:3"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3342:8:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3415:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3424:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3427:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3417:6:3"},"nodeType":"YulFunctionCall","src":"3417:12:3"},"nodeType":"YulExpressionStatement","src":"3417:12:3"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3401:8:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3411:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3398:2:3"},"nodeType":"YulFunctionCall","src":"3398:16:3"},"nodeType":"YulIf","src":"3395:36:3"},{"nodeType":"YulAssignment","src":"3440:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3483:9:3"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3494:8:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:3"},"nodeType":"YulFunctionCall","src":"3479:24:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:3"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"3450:28:3"},"nodeType":"YulFunctionCall","src":"3450:63:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3440:6:3"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2468:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2479:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2491:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2499:6:3","type":""}],"src":"2373:1146:3"},{"body":{"nodeType":"YulBlock","src":"3556:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3573:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3580:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3585:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3576:3:3"},"nodeType":"YulFunctionCall","src":"3576:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3566:6:3"},"nodeType":"YulFunctionCall","src":"3566:31:3"},"nodeType":"YulExpressionStatement","src":"3566:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3613:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3616:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3606:6:3"},"nodeType":"YulFunctionCall","src":"3606:15:3"},"nodeType":"YulExpressionStatement","src":"3606:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3637:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3640:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3630:6:3"},"nodeType":"YulFunctionCall","src":"3630:15:3"},"nodeType":"YulExpressionStatement","src":"3630:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3524:127:3"},{"body":{"nodeType":"YulBlock","src":"3708:116:3","statements":[{"nodeType":"YulAssignment","src":"3718:20:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3733:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3736:1:3"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3729:3:3"},"nodeType":"YulFunctionCall","src":"3729:9:3"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3718:7:3"}]},{"body":{"nodeType":"YulBlock","src":"3796:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3798:16:3"},"nodeType":"YulFunctionCall","src":"3798:18:3"},"nodeType":"YulExpressionStatement","src":"3798:18:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3767:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3760:6:3"},"nodeType":"YulFunctionCall","src":"3760:9:3"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3774:1:3"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3781:7:3"},{"name":"x","nodeType":"YulIdentifier","src":"3790:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3777:3:3"},"nodeType":"YulFunctionCall","src":"3777:15:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3771:2:3"},"nodeType":"YulFunctionCall","src":"3771:22:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3757:2:3"},"nodeType":"YulFunctionCall","src":"3757:37:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3750:6:3"},"nodeType":"YulFunctionCall","src":"3750:45:3"},"nodeType":"YulIf","src":"3747:71:3"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3687:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3690:1:3","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3696:7:3","type":""}],"src":"3656:168:3"},{"body":{"nodeType":"YulBlock","src":"3875:171:3","statements":[{"body":{"nodeType":"YulBlock","src":"3906:111:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3927:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3934:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3939:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3930:3:3"},"nodeType":"YulFunctionCall","src":"3930:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3920:6:3"},"nodeType":"YulFunctionCall","src":"3920:31:3"},"nodeType":"YulExpressionStatement","src":"3920:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3974:4:3","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3964:6:3"},"nodeType":"YulFunctionCall","src":"3964:15:3"},"nodeType":"YulExpressionStatement","src":"3964:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3999:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4002:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3992:6:3"},"nodeType":"YulFunctionCall","src":"3992:15:3"},"nodeType":"YulExpressionStatement","src":"3992:15:3"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3895:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3888:6:3"},"nodeType":"YulFunctionCall","src":"3888:9:3"},"nodeType":"YulIf","src":"3885:132:3"},{"nodeType":"YulAssignment","src":"4026:14:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4035:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"4038:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4031:3:3"},"nodeType":"YulFunctionCall","src":"4031:9:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4026:1:3"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3860:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3863:1:3","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3869:1:3","type":""}],"src":"3829:217:3"},{"body":{"nodeType":"YulBlock","src":"4225:238:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4242:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4253:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4235:6:3"},"nodeType":"YulFunctionCall","src":"4235:21:3"},"nodeType":"YulExpressionStatement","src":"4235:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4276:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4287:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4272:3:3"},"nodeType":"YulFunctionCall","src":"4272:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"4292:2:3","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:3"},"nodeType":"YulFunctionCall","src":"4265:30:3"},"nodeType":"YulExpressionStatement","src":"4265:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4315:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4326:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4311:3:3"},"nodeType":"YulFunctionCall","src":"4311:18:3"},{"hexValue":"4f6e6c792074686520636f6e7472616374206f776e65722063616e2070657266","kind":"string","nodeType":"YulLiteral","src":"4331:34:3","type":"","value":"Only the contract owner can perf"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4304:6:3"},"nodeType":"YulFunctionCall","src":"4304:62:3"},"nodeType":"YulExpressionStatement","src":"4304:62:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4386:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4397:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4382:3:3"},"nodeType":"YulFunctionCall","src":"4382:18:3"},{"hexValue":"6f726d207468697320616374696f6e2e","kind":"string","nodeType":"YulLiteral","src":"4402:18:3","type":"","value":"orm this action."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4375:6:3"},"nodeType":"YulFunctionCall","src":"4375:46:3"},"nodeType":"YulExpressionStatement","src":"4375:46:3"},{"nodeType":"YulAssignment","src":"4430:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4442:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4453:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4438:3:3"},"nodeType":"YulFunctionCall","src":"4438:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4430:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_37a1d48c8d794a51537bb1948f4c7674861aebd6ada3d5303da30ab6453a1320__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4202:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4216:4:3","type":""}],"src":"4051:412:3"},{"body":{"nodeType":"YulBlock","src":"4642:174:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4659:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4670:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4652:6:3"},"nodeType":"YulFunctionCall","src":"4652:21:3"},"nodeType":"YulExpressionStatement","src":"4652:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4693:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4704:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4689:3:3"},"nodeType":"YulFunctionCall","src":"4689:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"4709:2:3","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4682:6:3"},"nodeType":"YulFunctionCall","src":"4682:30:3"},"nodeType":"YulExpressionStatement","src":"4682:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4732:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4743:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4728:3:3"},"nodeType":"YulFunctionCall","src":"4728:18:3"},{"hexValue":"4172726179206c656e67746873206d757374206d61746368","kind":"string","nodeType":"YulLiteral","src":"4748:26:3","type":"","value":"Array lengths must match"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4721:6:3"},"nodeType":"YulFunctionCall","src":"4721:54:3"},"nodeType":"YulExpressionStatement","src":"4721:54:3"},{"nodeType":"YulAssignment","src":"4784:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4796:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4807:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4792:3:3"},"nodeType":"YulFunctionCall","src":"4792:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4784:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4619:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4633:4:3","type":""}],"src":"4468:348:3"},{"body":{"nodeType":"YulBlock","src":"4853:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4870:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4877:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4882:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4873:3:3"},"nodeType":"YulFunctionCall","src":"4873:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4863:6:3"},"nodeType":"YulFunctionCall","src":"4863:31:3"},"nodeType":"YulExpressionStatement","src":"4863:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4910:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4913:4:3","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4903:6:3"},"nodeType":"YulFunctionCall","src":"4903:15:3"},"nodeType":"YulExpressionStatement","src":"4903:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4934:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4937:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4927:6:3"},"nodeType":"YulFunctionCall","src":"4927:15:3"},"nodeType":"YulExpressionStatement","src":"4927:15:3"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4821:127:3"},{"body":{"nodeType":"YulBlock","src":"5000:88:3","statements":[{"body":{"nodeType":"YulBlock","src":"5031:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5033:16:3"},"nodeType":"YulFunctionCall","src":"5033:18:3"},"nodeType":"YulExpressionStatement","src":"5033:18:3"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5016:5:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5027:1:3","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5023:3:3"},"nodeType":"YulFunctionCall","src":"5023:6:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5013:2:3"},"nodeType":"YulFunctionCall","src":"5013:17:3"},"nodeType":"YulIf","src":"5010:43:3"},{"nodeType":"YulAssignment","src":"5062:20:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5073:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5080:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5069:3:3"},"nodeType":"YulFunctionCall","src":"5069:13:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5062:3:3"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4982:5:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4992:3:3","type":""}],"src":"4953:135:3"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_37a1d48c8d794a51537bb1948f4c7674861aebd6ada3d5303da30ab6453a1320__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Only the contract owner can perf\")\n        mstore(add(headStart, 96), \"orm this action.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Array lengths must match\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c8063204120bc1461005c5780638da5cb5b1461008f578063b3712d56146100ba578063d02641a0146100cd578063fe0992d0146100f6575b600080fd5b61007c61006a3660046102b5565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6001546100a2906001600160a01b031681565b6040516001600160a01b039091168152602001610086565b61007c6100c83660046102d7565b61010b565b61007c6100db3660046102b5565b6001600160a01b031660009081526002602052604090205490565b6101096101043660046103e9565b610150565b005b6001600160a01b038084166000908152600260205260408082205492851682528120549091908061013c85846104bf565b61014691906104dc565b9695505050505050565b6001546001600160a01b031633146101c85760405162461bcd60e51b815260206004820152603060248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e207065726660448201526f37b936903a3434b99030b1ba34b7b71760811b60648201526084015b60405180910390fd5b80518251146102195760405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d61746368000000000000000060448201526064016101bf565b60005b825181101561029457818181518110610237576102376104fe565b602002602001015160026000858481518110610255576102556104fe565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550808061028c90610514565b91505061021c565b505050565b80356001600160a01b03811681146102b057600080fd5b919050565b6000602082840312156102c757600080fd5b6102d082610299565b9392505050565b6000806000606084860312156102ec57600080fd5b6102f584610299565b925061030360208501610299565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561035257610352610313565b604052919050565b600067ffffffffffffffff82111561037457610374610313565b5060051b60200190565b600082601f83011261038f57600080fd5b813560206103a461039f8361035a565b610329565b82815260059290921b840181019181810190868411156103c357600080fd5b8286015b848110156103de57803583529183019183016103c7565b509695505050505050565b600080604083850312156103fc57600080fd5b823567ffffffffffffffff8082111561041457600080fd5b818501915085601f83011261042857600080fd5b8135602061043861039f8361035a565b82815260059290921b8401810191818101908984111561045757600080fd5b948201945b8386101561047c5761046d86610299565b8252948201949082019061045c565b9650508601359250508082111561049257600080fd5b5061049f8582860161037e565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104d6576104d66104a9565b92915050565b6000826104f957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610526576105266104a9565b506001019056fea26469706673582212208a6e7857259d0c76a2a9122964d88e8d301aee821d7e424e627735d16d24fdc664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x204120BC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xB3712D56 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xFE0992D0 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST PUSH2 0x7C PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST PUSH2 0x7C PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 PUSH2 0x13C DUP6 DUP5 PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x4DC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E65722063616E2070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x37B936903A3434B99030B1BA34B7B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E67746873206D757374206D617463680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x294 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x237 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x255 JUMPI PUSH2 0x255 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x28C SWAP1 PUSH2 0x514 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D0 DUP3 PUSH2 0x299 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F5 DUP5 PUSH2 0x299 JUMP JUMPDEST SWAP3 POP PUSH2 0x303 PUSH1 0x20 DUP6 ADD PUSH2 0x299 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x352 JUMPI PUSH2 0x352 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x374 JUMPI PUSH2 0x374 PUSH2 0x313 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3A4 PUSH2 0x39F DUP4 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DE JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3C7 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x438 PUSH2 0x39F DUP4 PUSH2 0x35A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x47C JUMPI PUSH2 0x46D DUP7 PUSH2 0x299 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x45C JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F DUP6 DUP3 DUP7 ADD PUSH2 0x37E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x4A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x526 JUMPI PUSH2 0x526 PUSH2 0x4A9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH15 0x7857259D0C76A2A9122964D88E8D30 BYTE 0xEE DUP3 SAR PUSH31 0x424E627735D16D24FDC664736F6C6343000811003300000000000000000000 ","sourceMap":"260:1227:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:3;;;517:2;502:18;493:46:2;;;;;;;;335:20;;;;;-1:-1:-1;;;;;335:20:2;;;;;;-1:-1:-1;;;;;729:32:3;;;711:51;;699:2;684:18;335:20:2;565:203:3;1086:274:2;;;;;;:::i;:::-;;:::i;1365:120::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1454:25:2;1431:7;1454:25;;;:11;:25;;;;;;;1365:120;752:325;;;;;;:::i;:::-;;:::i;:::-;;1086:274;-1:-1:-1;;;;;1222:20:2;;;1178:11;1222:20;;;:11;:20;;;;;;;1274:21;;;;;;;;1178:11;;1222:20;1274:21;1314:23;1329:8;1222:20;1314:23;:::i;:::-;:39;;;;:::i;:::-;1307:47;1086:274;-1:-1:-1;;;;;;1086:274:2:o;752:325::-;600:5;;-1:-1:-1;;;;;600:5:2;586:10;:19;578:80;;;;-1:-1:-1;;;578:80:2;;4253:2:3;578:80:2;;;4235:21:3;4292:2;4272:18;;;4265:30;4331:34;4311:18;;;4304:62;-1:-1:-1;;;4382:18:3;;;4375:46;4438:19;;578:80:2;;;;;;;;;902:6:::1;:13;877:14;:21;:38;869:75;;;::::0;-1:-1:-1;;;869:75:2;;4670:2:3;869:75:2::1;::::0;::::1;4652:21:3::0;4709:2;4689:18;;;4682:30;4748:26;4728:18;;;4721:54;4792:18;;869:75:2::1;4468:348:3::0;869:75:2::1;964:9;959:113;983:14;:21;979:1;:25;959:113;;;1055:6;1062:1;1055:9;;;;;;;;:::i;:::-;;;;;;;1022:11;:30;1034:14;1049:1;1034:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;1022:30:2::1;-1:-1:-1::0;;;;;1022:30:2::1;;;;;;;;;;;;:42;;;;1006:3;;;;;:::i;:::-;;;;959:113;;;;752:325:::0;;:::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:3:o;773:328::-;850:6;858;866;919:2;907:9;898:7;894:23;890:32;887:52;;;935:1;932;925:12;887:52;958:29;977:9;958:29;:::i;:::-;948:39;;1006:38;1040:2;1029:9;1025:18;1006:38;:::i;:::-;996:48;;1091:2;1080:9;1076:18;1063:32;1053:42;;773:328;;;;;:::o;1106:127::-;1167:10;1162:3;1158:20;1155:1;1148:31;1198:4;1195:1;1188:15;1222:4;1219:1;1212:15;1238:275;1309:2;1303:9;1374:2;1355:13;;-1:-1:-1;;1351:27:3;1339:40;;1409:18;1394:34;;1430:22;;;1391:62;1388:88;;;1456:18;;:::i;:::-;1492:2;1485:22;1238:275;;-1:-1:-1;1238:275:3:o;1518:183::-;1578:4;1611:18;1603:6;1600:30;1597:56;;;1633:18;;:::i;:::-;-1:-1:-1;1678:1:3;1674:14;1690:4;1670:25;;1518:183::o;1706:662::-;1760:5;1813:3;1806:4;1798:6;1794:17;1790:27;1780:55;;1831:1;1828;1821:12;1780:55;1867:6;1854:20;1893:4;1917:60;1933:43;1973:2;1933:43;:::i;:::-;1917:60;:::i;:::-;2011:15;;;2097:1;2093:10;;;;2081:23;;2077:32;;;2042:12;;;;2121:15;;;2118:35;;;2149:1;2146;2139:12;2118:35;2185:2;2177:6;2173:15;2197:142;2213:6;2208:3;2205:15;2197:142;;;2279:17;;2267:30;;2317:12;;;;2230;;2197:142;;;-1:-1:-1;2357:5:3;1706:662;-1:-1:-1;;;;;;1706:662:3:o;2373:1146::-;2491:6;2499;2552:2;2540:9;2531:7;2527:23;2523:32;2520:52;;;2568:1;2565;2558:12;2520:52;2608:9;2595:23;2637:18;2678:2;2670:6;2667:14;2664:34;;;2694:1;2691;2684:12;2664:34;2732:6;2721:9;2717:22;2707:32;;2777:7;2770:4;2766:2;2762:13;2758:27;2748:55;;2799:1;2796;2789:12;2748:55;2835:2;2822:16;2857:4;2881:60;2897:43;2937:2;2897:43;:::i;2881:60::-;2975:15;;;3057:1;3053:10;;;;3045:19;;3041:28;;;3006:12;;;;3081:19;;;3078:39;;;3113:1;3110;3103:12;3078:39;3137:11;;;;3157:148;3173:6;3168:3;3165:15;3157:148;;;3239:23;3258:3;3239:23;:::i;:::-;3227:36;;3190:12;;;;3283;;;;3157:148;;;3324:5;-1:-1:-1;;3367:18:3;;3354:32;;-1:-1:-1;;3398:16:3;;;3395:36;;;3427:1;3424;3417:12;3395:36;;3450:63;3505:7;3494:8;3483:9;3479:24;3450:63;:::i;:::-;3440:73;;;2373:1146;;;;;:::o;3524:127::-;3585:10;3580:3;3576:20;3573:1;3566:31;3616:4;3613:1;3606:15;3640:4;3637:1;3630:15;3656:168;3729:9;;;3760;;3777:15;;;3771:22;;3757:37;3747:71;;3798:18;;:::i;:::-;3656:168;;;;:::o;3829:217::-;3869:1;3895;3885:132;;3939:10;3934:3;3930:20;3927:1;3920:31;3974:4;3971:1;3964:15;4002:4;3999:1;3992:15;3885:132;-1:-1:-1;4031:9:3;;3829:217::o;4821:127::-;4882:10;4877:3;4873:20;4870:1;4863:31;4913:4;4910:1;4903:15;4937:4;4934:1;4927:15;4953:135;4992:3;5013:17;;;5010:43;;5033:18;;:::i;:::-;-1:-1:-1;5080:1:3;5069:13;;4953:135::o"},"methodIdentifiers":{"calcuMul(address,address,uint256)":"b3712d56","getTokenPrice(address)":"d02641a0","owner()":"8da5cb5b","setMultipleTokenPrices(address[],uint256[])":"fe0992d0","tokenPrices(address)":"204120bc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"calcuMul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Mul\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"setMultipleTokenPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dataFeeds.sol\":\"dataFeeds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/dataFeeds.sol\":{\"keccak256\":\"0x272733d18ecebc5b2a4c222dd761aecb2133fc7def1437beafaebcaec607d4fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4de6360f4c87e52614213b859a9379b8eb17f98ec247c89fd5b69478f64f4aed\",\"dweb:/ipfs/QmSetvZeu3vcZ5dYcKZn8CBeDX74APFU8jVKdJFCrkfiXt\"]}},\"version\":1}"}}}}}